#Arguments needed by main.py
scenario: PredatorCapturePreyGNN #name of the folder inside scenarios

#### Robotarium试验场地的边界
LEFT: -1.4
RIGHT: 1.4
UP: -0.9
DOWN: .9
# 每个robot每一个时间步移动的距离
step_dist : 0.2
# 是否使用随机种子[-1不随机][任意其他数字 随机]
seed: -1
# robot的初始位置相距彼此的最小距离
start_dist: 0.3
# 是否生成图片 [-1 不要图片] [当发送到Robotarium时是1]
show_figure_frequency: -1
#### Robotarium自带的参数
# 训练时是false, 提交的时候是true
robotarium: False
# 是否使用真实的robotarium
real_time: False
# 防止robot碰撞的参数 (default or safe)
barrier_certificate: default #Can be safe or default for strong or weak barrier certificates
update_frequency: 29

n_actions: 5 # 每个agent的动作空间
n_agents: 4  # 每个coalition中的agent数量


num_prey: 6

### reward相关的参数
time_penalty: -0.05
sense_reward: 1
capture_reward: 5
penalize_violations: True #If true, agents get a negative reward for collisions or boundary infractions and the episode stops
### done相关的参数
# 最大的episode步数
max_episode_steps: 80
 # violation=robot collision w/ each other or boundary, does not terminate early
end_ep_on_violation: True
violation_penalty: -0.05
delta: -1 #Used to determine the adjacency matrix, set to -1 for full communication

terminate_on_success: True # If true, then when the number of prey is zero, the environment will terminate. Else environment keeps running.

### obs相关的参数


dual_channel: False #Changes the observations to make them a 2d array for capabilities and observations if capability_aware is true
class_id: False #If capability_aware is False, this determines if the class id is appended instead or not
capability_aware: True #Either the agent know what class they're in or their capabilities. Make sure this matches training



### reset相关的参数
#Minimum distance the agents start from each other
ROBOT_INIT_RIGHT_THRESH : -0.5
PREY_INIT_LEFT_THRESH : 0.5

test: False #Set this to change the agents that are being selected from
#If the following two are False, make sure resample is also False


####Information needed to generate the predefined agents and coalitions
n_capture_agents: 25
n_predator_agents: 25
n_test_capture_agents: 25
n_test_predator_agents: 25
n_coalitions: 10

traits:
  predator:
    distribution: 'uniform'
    low: 0.30
    high: 0.55
  capture:
    distribution: 'uniform'
    low: 0.35
    high: 0.45

# manual select coalitions
manual_coalition_selection: True
coalition_selection: 3

#model_config_file: config.json
#model_file: agent.th
#
#actor_file: gnn_agent
#actor_class: GNNAgent
#
#env_file: PredatorCapturePreyGNN
#env_class: PredatorCapturePreyGNN #This needs to have all of the functionalities of a gym to work
## traits:
##   predator:
##     distribution: 'normal'
##     loc: .4
##     scale: .1
##   capture:
##     distribution: 'normal'
##     loc: .25
##     scale: .05
resample: False #Set to true to resample the agents every episode
hard_coded_coalition: False
episodes: 10 #Number of episodes to run for
shared_reward: True
